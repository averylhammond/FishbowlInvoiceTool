import logging


# Invoice class to hold all attributes of the invoice. This represents a single invoice generated by Fishbowl
class Invoice:

    # Constructor
    def __init__(self):
        # fmt:off
        self.customer_name   = None  # Name of customer on invoice
        self.date            = None  # Date of invoice
        self.order_number    = None  # Order Number, e.g. S12345
        self.po_number       = None  # PO Number
        self.payment_terms   = None  # Listed payment terms
        self.sales_rep       = None  # Sales rep identifier
        self.labor_cost      = 0.0   # Total cost of labor
        self.material_cost   = 0.0   # Total cost of material
        self.shipping_cost   = 0.0   # Total cost of shipping
        self.subtotal        = 0.0   # subtotal, from summing all costs
        self.sales_tax       = 0.0   # Additional sales tax
        self.total           = 0.0   # Calculated as subtotal plus sales_tax
        self.listed_total    = 0.0   # Total as listed
        self.page_contents   = []    # List of strings, each string is the text from a page of the invoice PDF
        # fmt:on

    # to_formatted_string: Returns a formatted string containing all of the invoice's fields on separate lines
    # returns: str, a formatted string containing all of the invoice's fields on separate lines
    def to_formatted_string(self):
        return (
            "***********************************\n"
            "Processed Invoice Results:\n"
            f"Customer Name:    {self.customer_name}\n"
            f"Invoice Date:     {self.date}\n"
            f"Order Number:     {self.order_number}\n"
            f"PO Number:        {self.po_number}\n"
            f"Payment Terms:    {self.payment_terms}\n"
            f"Sales Rep:        {self.sales_rep}\n"
            f"Labor Cost:       ${round(self.labor_cost, 2)}\n"
            f"Material Cost:    ${round(self.material_cost, 2)}\n"
            f"Shipping Cost:    ${round(self.shipping_cost, 2)}\n"
            f"subtotal:         ${round(self.subtotal, 2)}\n"
            f"Sales Tax:        ${round(self.sales_tax, 2)}\n"
            f"Calculated Total: ${round(self.total, 2)}\n"
            f"Listed Total:     ${round(self.listed_total, 2)}\n"
            "***********************************\n"
        )
